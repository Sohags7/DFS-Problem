#include<bits/stdc++.h>
#define ll  long long 
#define ld  long double 
#define ff first
#define ss second
#define pb push_back
#define pf push_front
#define vec vector
#define min_heap priority_queue <ll, vector<ll>, greater<ll> >
#define all(v) v.begin(),v.end()
#define allr(v) v.rbegin(),vine present(container, element)(container.find(element) != container.end())
#define cpresent(container, element)(find(all(container), element) != container.end())
#define gcd(a,b) __gcd(a,b)
#define     max3(a,b,c)     max(a,max(b,c))
#define     max4(a,b,c,d)   max(max3(a,b,c),d)
#define     min3(a,b,c)     min(a,min(b,c))
#define     min4(a,b,c,d)   min(a,min3(b,c,d))
#define er cout<<-1<<endl;
#define  fast ios_base::sync_with_stdio(false);cin.tie(NULL);
#define  mod 998244353     // 1e9+7
#define pi 3.1415926536
#define REP(i,a,b) for (int i = a; i <= b; i++)
#define fset(n) __builtin_ffs(n)
#define trailzerobit(n) __builtin_ctz(n)
using namespace std;

const int sz=1e6+15;
  //debbug
    template < typename F, typename S >
      ostream & operator << (ostream & os, const pair < F, S > &p)
    {
      return os << "(" << p.first << ", " << p.second << ")";
    }
     
    template < typename T >
      ostream & operator << (ostream & os, const vector < T > &v)
    {
      os << "{";
      for (auto it = v.begin (); it != v.end (); ++it)
        {
          if (it != v.begin ())
        os << ", ";
          os << *it;
        }
      return os << "}";
    }
     
    template < typename T >
      ostream & operator << (ostream & os, const set < T > &v)
    {
      os << "[";
      for (auto it = v.begin (); it != v.end (); ++it)
        {
          if (it != v.begin ())
        os << ", ";
          os << *it;
        }
      return os << "]";
    }
     
    template < typename T >
      ostream & operator << (ostream & os, const multiset < T > &v)
    {
      os << "[";
      for (auto it = v.begin (); it != v.end (); ++it)
        {
          if (it != v.begin ())
        os << ", ";
          os << *it;
        }
      return os << "]";
    }
     
    template < typename F, typename S >
      ostream & operator << (ostream & os, const map < F, S > &v)
    {
      os << "[";
      for (auto it = v.begin (); it != v.end (); ++it)
        {
          if (it != v.begin ())
        os << ", ";
          os << it->first << " = " << it->second;
        }
      return os << "]";
    }
     
    #define dbg(args...) do {cerr << #args << " : "; faltu(args); } while(0)
     
    void
    faltu ()
    {
      cerr << endl;
    }
     
    template < typename T > void faltu (T a[], int n)
    {
      for (int i = 0; i < n; ++i)
        cerr << a[i] << ' ';
      cerr << endl;
    }
     
    template < typename T, typename ... hello > void
    faltu (T arg, const hello & ... rest)
    {
      cerr << arg << ' ';
      faltu (rest ...);
    }               //debug
     
    void no ()
    {
      cout << "NO" << endl;
    }

ll dx[] = {0, 0, +1, -1};
ll dy[] = {+1, -1, 0, 0};

char ar[1005][1005];
ll visit[1005][1005];
char  ans[1005][1005];


ll n,m,k;
ll val;


deque<char>v;

ll r2=0;
ll c2=0;

ll r1=0;
ll c1=0;


bool  bfs(ll r,ll c)
{  
  queue< pair<ll,ll> >q;
   q.push({r,c});
   visit[r][c]=true;

  while(!q.empty())
  {
    ll x= q.front().first;
    ll y= q.front().second;
    q.pop();
    if(ar[x][y]=='B')
    {
    
     
      while(1)
      {
        if(ans[x][y]=='U'){v.pf('U');x++;}
          if(ans[x][y]=='D')v.pf('D'),x--;
          if(ans[x][y]=='L')v.pf('L'),y++;
      if(ans[x][y]=='R')v.pf('R'),y--;
    
          if(x==r1 && y==c1)
          {
            break;

          }

      }

      return true;

    }


  if(x+1>=1 && x+1<=n && y>=1 &&  y<=m && ar[x+1][y]!='#' && visit[x+1][y]==false)
    {
      q.push({x+1,y});

      ans[x+1][y]='D';
      visit[x+1][y]=1;

    }
if(x-1>=1 && x-1<=n && y>=1  && y<=m && ar[x-1][y]!='#' && visit[x-1][y]==false)
    {   q.push({x-1,y});
      ans[x-1][y]='U';
      visit[x-1][y]=1;

    }
    if(x>=1 && x<=n && y+1>=1 &&  y+1<=m && ar[x][y+1]!='#' && visit[x][y+1]==false)
    {   
      q.push({x,y+1});
      ans[x][y+1]='R';
      visit[x][y+1]=1;
    }
    if(x>=1 && x<=n && y-1>=1 &&  y-1<=m && ar[x][y-1]!='#' && visit[x][y-1]==false)
    {   
      q.push({x,y-1});
      ans[x][y-1]='L';
      visit[x][y-1]=1;
   }

  }
  return false;


}

 
void solve()
{
 
 cin>>n>>m;




for(int i=1;i<=n;i++)
{
  for(int j=1;j<=m;j++)
  {
    cin>>ar[i][j];
    ans[i][j]='0';

    if(ar[i][j]=='A')
    {
      r1=i;
      c1=j;

    }
    if(ar[i][j]=='B')
    {
      r2=i;
      c2=j;

     
  }
    }
}




if(bfs(r1,c1)==false)
{
  cout<<"NO"<<endl;
  return;
}


cout<<"YES"<<endl;
cout<<v.size()<<endl;
for(auto x: v)
{
  cout<<x;
}

cout<<endl;




}




int main ()
{

  #ifndef ONLINE_JUDGE
freopen ("input.txt","r", stdin);
freopen ("outt.txt","w", stdout);
 #endif


  ios_base::sync_with_stdio(false);
  cin.tie(NULL); 

 
//int t;cin>>t;for(ll i=1;i<=t;i++)
solve();

return 0;
 
}
